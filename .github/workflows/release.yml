name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service: [scanner, nlp, api, frontend]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "## Changes since $PREV_TAG" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
        else
          echo "## Initial Release" > CHANGELOG.md
          git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}

  update-docker-compose:
    name: Update Docker Compose with Release Tags
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Update docker-compose.yml
      run: |
        VERSION=${GITHUB_REF_NAME#v}
        
        # Create production docker-compose file with release tags
        sed -e "s|build: ./scanner|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-scanner:${VERSION}|g" \
            -e "s|build: ./nlp|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nlp:${VERSION}|g" \
            -e "s|build: ./api|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-api:${VERSION}|g" \
            -e "s|build: ./frontend|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${VERSION}|g" \
            docker-compose.yml > docker-compose.prod.yml
    
    - name: Upload docker-compose.prod.yml
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./docker-compose.prod.yml
        asset_name: docker-compose.prod.yml
        asset_content_type: text/yaml