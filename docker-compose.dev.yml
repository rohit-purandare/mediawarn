# Development Docker Compose - Use existing PostgreSQL and Redis
version: '3.8'

services:
  scanner:
    build: ./scanner
    container_name: cws-scanner-dev
    volumes:
      - ./data:/data
      - ./config:/config
      # Mount your media directories here, e.g.:
      # - /path/to/your/media:/media:ro
    environment:
      - REDIS_URL=${REDIS_URL:-redis://host.docker.internal:6379}
      - DATABASE_URL=${DATABASE_URL:-postgresql://cws:password@host.docker.internal:5432/cws}
      - SCAN_INTERVAL=${SCAN_INTERVAL:-300}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    network_mode: bridge

  nlp-worker:
    build: ./nlp
    container_name: cws-nlp-dev
    deploy:
      replicas: ${NLP_WORKERS:-2}
    environment:
      - REDIS_URL=${REDIS_URL:-redis://host.docker.internal:6379}
      - DATABASE_URL=${DATABASE_URL:-postgresql://cws:password@host.docker.internal:5432/cws}
      - MODEL_CACHE=/models
      - CUDA_VISIBLE_DEVICES=${GPU_DEVICES:-}
    volumes:
      - ./nlp/models:/models
      - ./data:/data:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    network_mode: bridge

  frontend:
    build: ./frontend
    container_name: cws-frontend-dev
    ports:
      - "7219:7219"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api
    restart: unless-stopped

  api:
    build: ./api
    container_name: cws-api-dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://cws:password@host.docker.internal:5432/cws}
      - REDIS_URL=${REDIS_URL:-redis://host.docker.internal:6379}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    network_mode: bridge