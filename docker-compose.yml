version: '3.8'

services:
  mediawarn:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mediawarn
    environment:
      - SERVICE=all
      - DATABASE_URL=postgresql://cws:password@postgres:5432/cws
      - REDIS_URL=redis://redis:6379
      - SCAN_INTERVAL=300
      - WORKERS=4
      - NLP_WORKERS=2
      - PORT=8000
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./data:/data
      - ./config:/app/config:ro
      - nlp_models:/models
      # Mount your media directories here, e.g.:
      # - /path/to/your/media:/media:ro
    ports:
      - "7219:7219"
      - "8000:8000"
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7219", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: cws-postgres
    environment:
      - POSTGRES_DB=cws
      - POSTGRES_USER=cws
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cws"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: cws-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  nlp_models: